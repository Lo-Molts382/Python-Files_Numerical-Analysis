# -*- coding: utf-8 -*-
"""SECANT METHOD ALGORITHM

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z926uh7ObbCyOMfGZdmFn1AF1WjExCln
"""

#################################
#    SECANT METHOD ALGORITHM    #
#################################

def root_formula(a, b):
  r_inner = ((b - a)/(f(b) - f(a)))
  answer = b - (f(b) * r_inner)
  return answer

# Main Function
''' Declarations & Initialization/Inputs '''
x1 = float(input("Please enter first starting point (x1): "))
x2 = float(input("Please enter second starting point (x2): "))
a = x1        # initial a
b = x2        # initial b
i = 3         # third element

close = float(input("Enter closeness: "))
iter = int(input("How many iterations? "))

# Function input
x = input('Enter the function: ')
exec('def f(x): return (' + x + ')')

print("\n====================")
print("       RESULT       ")
print("====================\n")

print("x1" + " = " + str(a))
print("x2" + " = " + str(b))

while abs(f(root_formula(a,b))) >= close and i <= iter:
  c = root_formula(a, b)
  print("x" + str(i) + " = " + str(c))
  a = b       # a will hold the last b
  b = c       # b will hold the recent answer that we got from root_formula()
  i = i + 1   # update for iteration count